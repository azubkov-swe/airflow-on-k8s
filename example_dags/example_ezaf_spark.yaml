apiVersion: "sparkoperator.hpe.com/v1beta2"
kind: SparkApplication
metadata:
  name: data-transfer-demo
  namespace: airflow-hpe
spec:
  sparkConf:
    spark.hadoop.fs.s3a.endpoint: "13.56.82.84:31900"
    spark.hadoop.fs.s3a.access.key: "minioadmin2"
    spark.hadoop.fs.s3a.secret.key: "minioadmin2"
    spark.hadoop.fs.s3a.path.style.access: "true"
    spark.hadoop.fs.s3a.impl: "org.apache.hadoop.fs.s3a.S3AFileSystem"
    spark.hadoop.fs.s3a.connection.ssl.enabled: "true"
    spark.mapr.user.secret: spark-user-secret

    # Needed if s3 server is behind proxy
    # spark.hadoop.fs.s3a.proxy.host: "web-proxy.corp.hpecorp.net"
    # spark.hadoop.fs.s3a.proxy.port: "8080"

    # Needed if s3 server certs are not imported to java truststore used by spark
    "spark.driver.extraJavaOptions": "-Dcom.amazonaws.sdk.disableCertChecking=true"
    "spark.executor.extraJavaOptions": "-Dcom.amazonaws.sdk.disableCertChecking=true"
  type: Scala
  sparkVersion: 3.2.0
  mode: cluster
  image: gcr.io/mapr-252711/spark-demo-example:rc-1
  imagePullPolicy: Always
  mainApplicationFile: local:///tmp/SparkDemo.jar
  mainClass: com.mapr.sparkdemo.DataTransferDemo
  arguments:
    - s3a://ezaf-demo/data/financial.csv          # source path
    - csv                                         # source format
    - file:///mounts/data/datasets/financial.csv  # destination path
    - csv                                         # destination format
  restartPolicy:
    type: Never
  imagePullSecrets:
    - hpe-imagepull-secrets
  driver:
    # Needed if object store is Amazon S3
    # javaOptions: "-Djavax.net.ssl.trustStore=/etc/pki/java/cacerts"
    cores: 1
    coreLimit: "1000m"
    memory: "512m"
    labels:
      version: 3.2.0
    volumeMounts:
      - mountPath: /mounts/data/
        name: spark-data
  executor:
    # Needed if object store is Amazon S3
    # javaOptions: "-Djavax.net.ssl.trustStore=/etc/pki/java/cacerts"
    cores: 1
    instances: 2
    memory: "512m"
    labels:
      version: 3.2.0
    volumeMounts:
      - mountPath: /mounts/data
        name: spark-data
  volumes:
    - name: spark-data
      persistentVolumeClaim:
        claimName: kubeflow-shared-pvc
